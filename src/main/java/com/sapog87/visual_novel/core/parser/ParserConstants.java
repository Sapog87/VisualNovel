/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */
package com.sapog87.visual_novel.core.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int ALPHA = 5;
  /** RegularExpression Id. */
  int DIGIT = 6;
  /** RegularExpression Id. */
  int ALPHADIGIT = 7;
  /** RegularExpression Id. */
  int INT = 8;
  /** RegularExpression Id. */
  int REAL = 9;
  /** RegularExpression Id. */
  int TRUE = 10;
  /** RegularExpression Id. */
  int FALSE = 11;
  /** RegularExpression Id. */
  int ID = 12;
  /** RegularExpression Id. */
  int GT = 13;
  /** RegularExpression Id. */
  int LT = 14;
  /** RegularExpression Id. */
  int GEQ = 15;
  /** RegularExpression Id. */
  int LEQ = 16;
  /** RegularExpression Id. */
  int NEQ = 17;
  /** RegularExpression Id. */
  int EQ = 18;
  /** RegularExpression Id. */
  int AND = 19;
  /** RegularExpression Id. */
  int OR = 20;
  /** RegularExpression Id. */
  int LPAREN = 21;
  /** RegularExpression Id. */
  int RPAREN = 22;
  /** RegularExpression Id. */
  int PLUS = 23;
  /** RegularExpression Id. */
  int MINUS = 24;
  /** RegularExpression Id. */
  int MULTIPLY = 25;
  /** RegularExpression Id. */
  int DIVIDE = 26;
  /** RegularExpression Id. */
  int MOD = 27;
  /** RegularExpression Id. */
  int QUOTE = 28;
  /** RegularExpression Id. */
  int ASSIGNMENT = 29;
  /** RegularExpression Id. */
  int DASSIGNMENT = 30;
  /** RegularExpression Id. */
  int MASSIGNMENT = 31;
  /** RegularExpression Id. */
  int ORASSIGNMENT = 32;
  /** RegularExpression Id. */
  int ANDASSIGNMENT = 33;
  /** RegularExpression Id. */
  int MODASSIGNMENT = 34;
  /** RegularExpression Id. */
  int PLUSASSIGNMENT = 35;
  /** RegularExpression Id. */
  int MINUSASSIGNMENT = 36;
  /** RegularExpression Id. */
  int ENDQUOTE = 38;
  /** RegularExpression Id. */
  int CHAR = 39;
  /** RegularExpression Id. */
  int CNTRL_ESC = 40;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int STRING_STATE = 1;
  /** Lexical state. */
  int ESC_STATE = 2;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<ALPHA>",
    "<DIGIT>",
    "<ALPHADIGIT>",
    "<INT>",
    "<REAL>",
    "\"true\"",
    "\"false\"",
    "<ID>",
    "\">\"",
    "\"<\"",
    "\">=\"",
    "\"<=\"",
    "\"!=\"",
    "\"==\"",
    "\"&&\"",
    "\"||\"",
    "\"(\"",
    "\")\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"\\\"\"",
    "\"=\"",
    "\"/=\"",
    "\"*=\"",
    "\"|=\"",
    "\"&=\"",
    "\"%=\"",
    "\"+=\"",
    "\"-=\"",
    "\"\\\\\"",
    "<ENDQUOTE>",
    "<CHAR>",
    "<CNTRL_ESC>",
  };

}
